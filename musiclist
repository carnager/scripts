#!/usr/bin/env python3

import os
from pprint import pprint as pp
from itertools import groupby
import mpd

client = mpd.MPDClient()


mpd_host = 'localhost'
mpd_port = '6600'
mpd_pass = ''

if 'MPD_HOST' in os.environ:
    mpd_connection = os.environ['MPD_HOST'].split('@')
    if len(mpd_connection) == 1:
        mpd_host = mpd_connection[0]
    elif len(mpd_connection) == 2:
        mpd_host = mpd_connection[1]
        mpd_pass = mpd_connection[0]
    else:
        print('Unable to parse MPD_HOST, using defatdts')

if 'MPD_PORT' in os.environ:
    mpd_port = os.environ['MPD_PORT']

client.connect(mpd_host, mpd_port)
if mpd_pass:
    client.password(mpd_pass)

def reduceToFstElm(maybeList):
    return maybeList[0] if isinstance(maybeList, list) else maybeList

def createAlbumsList(tracks):
    def gp(t):
        return (t['album'], t['albumartist'], t['date'])
        ks = ['date', 'albumartist', 'album']
        for t in tracks:
            t.update([(k, reduceToFstElm(v)) for (k, v) in t.items() if k in ks])
    return tracks

alist=client.search('filename', " ")
albumlist=createAlbumsList(alist)
newlist = []
for album in albumlist:
    if album['track'] == '1':
        try:
            rating = client.sticker_get('song', album['file'], 'albumrating')
        except mpd.CommandError:
            rating = "-"
        album['rating'] = rating
        entry={'artist': album['albumartist'], 'album': album['album'], 'date': album['date'], 'rating': album['rating']}
        newlist.append(entry)

print('''
<html>
<head>
<meta charset="utf-8"/>
<link rel="stylesheet" href="http://netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css">
<style>
        body{background:#eee}
        table{
        margin:5em auto;
        max-width:56em;
        background: white;
        }
</style>
<link href="http://maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css" rel="stylesheet">
</head>
<body>
<div class="table-responsive">
<table id="music" style="white-space: nowrap;" class="table table-bordered">
<thead>
<tr>
<th>Artist</th>
<th>Year</th>
<th>Album</th>
<th>Rating</th>
</tr>
</thead>
<tbody>
''')

byArtist = lambda t: t['artist']
for a, ts in groupby(sorted(newlist, key=byArtist), key=byArtist):
    albums = list(ts)
    rowspan=len(albums)
    print("<tr class=\"newartist\"><td rowspan=\""+str(rowspan)+"\">"+a+"</td>")
    for x in albums:
        if x['rating'] == '-' or x['rating'] == None:
            output = ''
        else:
            parts = str(x['rating']).split(' ')

            rate = int(parts[0])
            max_rate = 5
            output = ''
            if rate % 2 == 0:
                rate = int(rate / 2)
                output += rate * '<i class="fa fa-star"></i>'
            else:
                rate = float(rate / 2)
                first = int(str(rate).split('.')[0])
                output += (first * '<i class="fa fa-star"></i>') + '<i class="fa fa-star-half-o"></i>'
            output += int(max_rate - rate) * '<i class="fa fa-star-o"></i>'

        print("<td>"+x['date']+"</td>")
        print("")
        print("    <td>"+x['album']+"</td>")
        print("    <td>"+output+"</td>")
        print("    </tr>")
print("</tr></table></body></html>")


    # example for x: {'artist': '[LAW]', 'date': '1998', 'rating': '-', 'album': 'Creature'}
#    print("<tr class=\"newartist\"><td rowspan=\""+"10"+"\">"+x['artist']+"</td>")
    # there are several dicts in list "newlist" with same artist value. how to print every album by x['artist']?
#print('</table></body></html>')
    

