#!/bin/bash
# If mpdscribble runs on a remote machine, set host here:
ssh_host=tauron
# ssh enabled?
ssh_lastfm=1
# Some Variables to clean up the code
mpds_check="$(ssh $ssh_host -q -t 'bash -c "pgrep mpdscribble"')"

source $HOME/.config/dmenurc

if [[ "$backend" == "rofi" ]]
    then
        function dmenu_t () {
        choice=$(echo "$menu" | rofi -font "$font" -fg "$nf" -bg "$nb" -hlfg "$sf" -hlbg "$sb" -o 90 -bc "$bc" -dmenu -p "lastfm: ")
        }

elif [[ "$backend" == "dmenu" ]]
    then
        if [[ "$dmenu_trans" == "1" ]]
            then
            function dmenu_t () {
            choice=$(echo "$menu" | dmenu -l 15 -fn "$font" -nf "$nf" -nb "$nb" -sf "$sf" -sb "$sb" -o 90 -p "lastfm: ")
            }
        else
            function dmenu_t () {
            choice=$(echo "$menu" | dmenu -l 15 -fn "$font" -nf "$nf" -nb "$nb" -sf "$sf" -sb "$sb" -p "lastfm: ")
            }
        fi
fi

menu="
1. Toggle Scrobbling
2. Show Scrobbling Status
-------------------------
i. Ignorelist
"
dmenu_t
case "$choice" in
    "1. Toggle Scrobbling")
        if ((ssh_lastfm)); then
            if [ -n "$mpds_check" ];
                then
                ssh $ssh_host -q -t 'bash -c "killall mpdscribble"' && notify-send "LastFM Scrobbling Disabled"
            else
                ssh $ssh_host -q 'mpdscribble' && notify-send "LastFM Scrobbling Enabled"
            fi
        else
            if pgrep mpdscribble 
                then
                killall mpdscribble && notify-send "LastFM Scrobbling Disabled"
            else
                mpdscribble && notify-send "LastFM Scrobbling Enabled"
            fi
       fi
       # Make sure we terminate to make sure lastfm status is kept.
       killall lastfm
       ;;
     "2. Show Scrobbling Status")
         if ((ssh_lastfm)); then
             if [ -n "$mpds_check" ];
                 then
                 notify-send "LastFM Scrobbling Enabled"
             else
                 notify-send "LastFM Scrobbling Disbled"
             fi
         else
             if pgrep mpdscribble
                 then
                 notify-send "LastFM Scrobbling Enabled"
             else
                 notify-send "LastFM Scrobbling Disbled"
             fi
         fi
         # Make sure we terminate to make sure lastfm status is kept.
         killall lastfm
         ;;
     "i. Ignorelist")
menu="
1. Add current Artist
2. Remove some Artist
"
dmenu_t
case "$choice" in
     "1. Add current Artist")
         touch $HOME/.ignorelist;
         echo $(mpc current --format '%artist%') >> $HOME/.ignorelist;
         ignorelist=$(uniq $HOME/.ignorelist);
         rm -f $HOME/.ignorelist;
         # for some reason "sort "$ignorelist" does not work here.
         echo "$ignorelist" | sort > $HOME/.ignorelist;
;;
"2. Remove some Artist")
menu="$(cat $HOME/.ignorelist)";
dmenu_t
sed -i "/${choice}/d" $HOME/.ignorelist
;;
esac
esac
# Make sure all old instances of the main loop will be killed before starting new loop.
myPID=$$
kill -9 $( pgrep 'lastfm' | grep -vE '^'${myPID}'$' ) >/dev/null 2>&1
while true; do
# While loop for setups with remote mpdscribble
if ((ssh_lastfm)); then
export blacklist_test=$blacklist
if mpc current --format '%artist%' | grep -f $HOME/.ignorelist
    then $(ssh $ssh_host -q -t 'bash -c "killall mpdscribble" > /dev/null 2>&1') && export blacklist=true
else
    if [ $(ssh $ssh_host -q -t 'bash -c "pgrep mpdscribble"'|head -1) ]
        then
        echo "no change"
    else
        ssh $ssh_host -q 'mpdscribble'
    fi
export blacklist=false
fi
if [[ $blacklist == $blacklist_test ]]
    then
    :
else
    if [ "$blacklist" = true ]
        then notify-send "$(mpc current --format '%artist%')" "\nmatching blacklist\nScrobbling disabled"
    elif [ "$blacklist" = false ]
        then notify-send "$(mpc current --format '%artist%')" "\nnot on blacklist\nScrobbling enabled"
    fi
fi
sleep 5
# same code block, for setups with local mpdscribble
else
export blacklist_test=$blacklist
if mpc current --format '%artist%' | grep -f $HOME/.ignorelist
    then $(killall mpdscribble > /dev/null 2>&1) && export blacklist=true
else
    if [ $(pgrep mpdscribble | head -1) ]
        then
        echo "no change"
    else
        ssh mpdscribble
    fi
export blacklist=false
fi
if [[ $blacklist == $blacklist_test ]]
    then
    :
else
    if [ "$blacklist" = true ]
        then notify-send "lastfm" "$(mpc current --format '%artist%') on ignorelist - Scrobbling disabled"
    elif [ "$blacklist" = false ]
        then notify-send "lastfm" "$(mpc current --format '%artist%') not on ignorelist - Scrobbling enabled"
    fi
fi
sleep 5
fi
done
